type ServiceReview {
	id:         ID!
	userId:     String
	vendorID:   String
	createdAt:  Timestamp
	updatedAt:  Timestamp
	serviceID:  Int!
	text:       String!
	rating:     Int
	parentID:   Int
	replies:    [ServiceReview]
}

type ServiceReviewWithAverageRating {
	reviews: [ServiceReview]
	averageRatings: Float
}

input ServiceReviewInput {
	vendorID:   String!
	serviceID:  Int!
	text:       String!
	rating:     Int
	parentID:   Int
}

input ServiceReviewUpdateInput {
	id:         Int!
	text:       String!
	rating:     Int
}

extend type Mutation {
	createReview(input: ServiceReviewInput!): ServiceReview
	createReply(input: ServiceReviewInput!): ServiceReview
	UpdateReview(input: ServiceReviewUpdateInput!): ServiceReview
	DeleteReview(id: Int!): Boolean
}

extend type Query {
	getServiceReviews(service_id: Int!): ServiceReviewWithAverageRating
}
